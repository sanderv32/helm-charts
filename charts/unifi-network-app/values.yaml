# Default values for unifi-network-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

memLimit: 1024
memStartup: 1024
puid: 1000
pgid: 1000
tz: "Etc/UTC"

mongodb:
  enabled: true
  db_name: "unifi-mongodb"
  db_user: "unifi"
  db_password: "unifi"
  port: 27017
  image:
    repository: docker.io/mongo
    pullPolicy: IfNotPresent
    tag: ""
  volumes: []
  volumeMounts: []

replicaCount: 1

image:
  repository: linuxserver/unifi-network-application
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  ports:
    https_admin:
      port: 8443
      proto: tcp
    http_inform:
      port: 8080
      proto: tcp
    stun:
      port: 3478
      proto: udp
    discovery:
      port: 10001
      proto: udp
    discovery_l2:
      port: 1900
      proto: udp
    https_guestportal:
      port: 8843
      proto: tcp
    http_guestportal:
      port: 8880
      proto: tcp
    throughputtest:
      port: 6789
      proto: tcp
    remote_syslog:
      port: 5514
      proto: udp

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: unifi-network-app.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 8080
readinessProbe:
  httpGet:
    path: /
    port: 8080

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
